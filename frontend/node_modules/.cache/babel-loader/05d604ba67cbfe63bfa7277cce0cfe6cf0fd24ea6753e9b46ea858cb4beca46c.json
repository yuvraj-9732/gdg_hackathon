{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\v1.0.1\\\\frontend\\\\src\\\\components\\\\AnimatedBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n/**\r\n * A component that renders a decorative, interactive background with floating circles\r\n * that are attracted to the mouse and get destroyed on hover.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedBackground = () => {\n  _s();\n  const [circles, setCircles] = useState([]);\n  const mousePos = useRef({\n    x: -1,\n    y: -1\n  });\n  const containerRef = useRef(null);\n  const animationFrameId = useRef();\n\n  // Initialize circles on mount\n  useEffect(() => {\n    const generateCircles = () => {\n      const newCircles = [];\n      const numCircles = 30; // Increased number of circles\n      const {\n        innerWidth,\n        innerHeight\n      } = window;\n      for (let i = 0; i < numCircles; i++) {\n        const size = Math.random() * 80 + 20; // Varies from 20px to 100px\n        newCircles.push({\n          id: i,\n          x: Math.random() * innerWidth,\n          y: Math.random() * innerHeight,\n          vx: (Math.random() - 0.5) * 0.5,\n          // Slow initial velocity\n          vy: (Math.random() - 0.5) * 0.5,\n          size: size,\n          opacity: 1\n        });\n      }\n      setCircles(newCircles);\n    };\n    generateCircles();\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      mousePos.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n    const animate = () => {\n      setCircles(prevCircles => prevCircles.map(circle => {\n        // 1. Destruction on hover\n        const dxMouse = mousePos.current.x - circle.x;\n        const dyMouse = mousePos.current.y - circle.y;\n        const distMouse = Math.sqrt(dxMouse * dxMouse + dyMouse * dyMouse);\n        if (distMouse < circle.size / 2) {\n          return {\n            ...circle,\n            opacity: 0\n          }; // Mark for destruction by fading out\n        }\n\n        // 2. Attraction to mouse\n        let attraction_dx = 0;\n        let attraction_dy = 0;\n        if (mousePos.current.x > 0) {\n          const attraction_dist = Math.sqrt(dxMouse * dxMouse + dyMouse * dyMouse);\n          if (attraction_dist > 100) {\n            // Only attract if not too close\n            const force = 1 / Math.max(100, attraction_dist); // Simple inverse force\n            attraction_dx = dxMouse / attraction_dist * force * 2;\n            attraction_dy = dyMouse / attraction_dist * force * 2;\n          }\n        }\n\n        // Update velocity with attraction and damping\n        const newVx = (circle.vx + attraction_dx) * 0.98;\n        const newVy = (circle.vy + attraction_dy) * 0.98;\n\n        // Update position\n        let newX = circle.x + newVx;\n        let newY = circle.y + newVy;\n\n        // Bounce off edges\n        if (newX < 0 || newX > window.innerWidth) circle.vx *= -1;\n        if (newY < 0 || newY > window.innerHeight) circle.vy *= -1;\n        return {\n          ...circle,\n          x: newX,\n          y: newY,\n          vx: newVx,\n          vy: newVy\n        };\n      }).filter(circle => circle.opacity > 0.01) // Remove destroyed circles\n      );\n      animationFrameId.current = requestAnimationFrame(animate);\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    animationFrameId.current = requestAnimationFrame(animate);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      cancelAnimationFrame(animationFrameId.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animated-background\",\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circles-container\",\n      children: circles.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-shape\",\n        style: {\n          width: `${c.size}px`,\n          height: `${c.size}px`,\n          left: `${c.x}px`,\n          top: `${c.y}px`,\n          opacity: c.opacity\n        }\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedBackground, \"ql6C0h/7Ge/Fj4hPOz/RP3hTrcY=\");\n_c = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AnimatedBackground","_s","circles","setCircles","mousePos","x","y","containerRef","animationFrameId","generateCircles","newCircles","numCircles","innerWidth","innerHeight","window","i","size","Math","random","push","id","vx","vy","opacity","handleMouseMove","e","current","clientX","clientY","animate","prevCircles","map","circle","dxMouse","dyMouse","distMouse","sqrt","attraction_dx","attraction_dy","attraction_dist","force","max","newVx","newVy","newX","newY","filter","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","className","ref","children","c","style","width","height","left","top","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/v1.0.1/frontend/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n/**\r\n * A component that renders a decorative, interactive background with floating circles\r\n * that are attracted to the mouse and get destroyed on hover.\r\n */\r\nconst AnimatedBackground = () => {\r\n  const [circles, setCircles] = useState([]);\r\n  const mousePos = useRef({ x: -1, y: -1 });\r\n  const containerRef = useRef(null);\r\n  const animationFrameId = useRef();\r\n\r\n  // Initialize circles on mount\r\n  useEffect(() => {\r\n    const generateCircles = () => {\r\n      const newCircles = [];\r\n      const numCircles = 30; // Increased number of circles\r\n      const { innerWidth, innerHeight } = window;\r\n\r\n      for (let i = 0; i < numCircles; i++) {\r\n        const size = Math.random() * 80 + 20; // Varies from 20px to 100px\r\n        newCircles.push({\r\n          id: i,\r\n          x: Math.random() * innerWidth,\r\n          y: Math.random() * innerHeight,\r\n          vx: (Math.random() - 0.5) * 0.5, // Slow initial velocity\r\n          vy: (Math.random() - 0.5) * 0.5,\r\n          size: size,\r\n          opacity: 1,\r\n        });\r\n      }\r\n      setCircles(newCircles);\r\n    };\r\n    generateCircles();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      mousePos.current = { x: e.clientX, y: e.clientY };\r\n    };\r\n\r\n    const animate = () => {\r\n      setCircles((prevCircles) =>\r\n        prevCircles\r\n          .map((circle) => {\r\n            // 1. Destruction on hover\r\n            const dxMouse = mousePos.current.x - circle.x;\r\n            const dyMouse = mousePos.current.y - circle.y;\r\n            const distMouse = Math.sqrt(dxMouse * dxMouse + dyMouse * dyMouse);\r\n\r\n            if (distMouse < circle.size / 2) {\r\n              return { ...circle, opacity: 0 }; // Mark for destruction by fading out\r\n            }\r\n\r\n            // 2. Attraction to mouse\r\n            let attraction_dx = 0;\r\n            let attraction_dy = 0;\r\n            if (mousePos.current.x > 0) {\r\n              const attraction_dist = Math.sqrt(dxMouse * dxMouse + dyMouse * dyMouse);\r\n              if (attraction_dist > 100) { // Only attract if not too close\r\n                const force = 1 / Math.max(100, attraction_dist); // Simple inverse force\r\n                attraction_dx = (dxMouse / attraction_dist) * force * 2;\r\n                attraction_dy = (dyMouse / attraction_dist) * force * 2;\r\n              }\r\n            }\r\n\r\n            // Update velocity with attraction and damping\r\n            const newVx = (circle.vx + attraction_dx) * 0.98;\r\n            const newVy = (circle.vy + attraction_dy) * 0.98;\r\n\r\n            // Update position\r\n            let newX = circle.x + newVx;\r\n            let newY = circle.y + newVy;\r\n\r\n            // Bounce off edges\r\n            if (newX < 0 || newX > window.innerWidth) circle.vx *= -1;\r\n            if (newY < 0 || newY > window.innerHeight) circle.vy *= -1;\r\n\r\n            return { ...circle, x: newX, y: newY, vx: newVx, vy: newVy };\r\n          })\r\n          .filter((circle) => circle.opacity > 0.01) // Remove destroyed circles\r\n      );\r\n\r\n      animationFrameId.current = requestAnimationFrame(animate);\r\n    };\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    animationFrameId.current = requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      cancelAnimationFrame(animationFrameId.current);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"animated-background\" ref={containerRef}>\r\n      <div className=\"circles-container\">\r\n        {circles.map((c) => (\r\n          <div\r\n            key={c.id}\r\n            className=\"circle-shape\"\r\n            style={{\r\n              width: `${c.size}px`,\r\n              height: `${c.size}px`,\r\n              left: `${c.x}px`,\r\n              top: `${c.y}px`,\r\n              opacity: c.opacity,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
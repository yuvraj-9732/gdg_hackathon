{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\v1.0.1\\\\frontend\\\\src\\\\components\\\\AnimatedBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\n\n/**\r\n * A component that renders a decorative, animated background with floating circles.\r\n * It should be placed in a container with position: relative.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedBackground = () => {\n  _s();\n  const circlesRef = useRef(null);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (!circlesRef.current) {\n        return;\n      }\n      const {\n        clientX,\n        clientY\n      } = e;\n      const {\n        innerWidth,\n        innerHeight\n      } = window;\n\n      // Calculate offset from center, from -0.5 to 0.5\n      const offsetX = clientX / innerWidth - 0.5;\n      const offsetY = clientY / innerHeight - 0.5;\n\n      // Apply a transform to the circles container for a parallax effect\n      const transform = `translate(${offsetX * -40}px, ${offsetY * -40}px)`;\n      circlesRef.current.style.transform = transform;\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animated-background\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"circles\",\n      ref: circlesRef,\n      children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(\"li\", {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedBackground, \"z+TXxLwNf/TKXwJFSSy8ipyJDa4=\");\n_c = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","AnimatedBackground","_s","circlesRef","handleMouseMove","e","current","clientX","clientY","innerWidth","innerHeight","window","offsetX","offsetY","transform","style","addEventListener","removeEventListener","className","children","ref","Array","map","_","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/v1.0.1/frontend/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * A component that renders a decorative, animated background with floating circles.\r\n * It should be placed in a container with position: relative.\r\n */\r\nconst AnimatedBackground = () => {\r\n  const circlesRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = e => {\r\n      if (!circlesRef.current) {\r\n        return;\r\n      }\r\n\r\n      const { clientX, clientY } = e;\r\n      const { innerWidth, innerHeight } = window;\r\n\r\n      // Calculate offset from center, from -0.5 to 0.5\r\n      const offsetX = clientX / innerWidth - 0.5;\r\n      const offsetY = clientY / innerHeight - 0.5;\r\n\r\n      // Apply a transform to the circles container for a parallax effect\r\n      const transform = `translate(${offsetX * -40}px, ${offsetY * -40}px)`;\r\n      circlesRef.current.style.transform = transform;\r\n    };\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n\r\n    return () => window.removeEventListener('mousemove', handleMouseMove);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"animated-background\">\r\n      <ul className=\"circles\" ref={circlesRef}>\r\n        {[...Array(10)].map((_, i) => (\r\n          <li key={i}></li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEhD;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,UAAU,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMO,eAAe,GAAGC,CAAC,IAAI;MAC3B,IAAI,CAACF,UAAU,CAACG,OAAO,EAAE;QACvB;MACF;MAEA,MAAM;QAAEC,OAAO;QAAEC;MAAQ,CAAC,GAAGH,CAAC;MAC9B,MAAM;QAAEI,UAAU;QAAEC;MAAY,CAAC,GAAGC,MAAM;;MAE1C;MACA,MAAMC,OAAO,GAAGL,OAAO,GAAGE,UAAU,GAAG,GAAG;MAC1C,MAAMI,OAAO,GAAGL,OAAO,GAAGE,WAAW,GAAG,GAAG;;MAE3C;MACA,MAAMI,SAAS,GAAG,aAAaF,OAAO,GAAG,CAAC,EAAE,OAAOC,OAAO,GAAG,CAAC,EAAE,KAAK;MACrEV,UAAU,CAACG,OAAO,CAACS,KAAK,CAACD,SAAS,GAAGA,SAAS;IAChD,CAAC;IAEDH,MAAM,CAACK,gBAAgB,CAAC,WAAW,EAAEZ,eAAe,CAAC;IAErD,OAAO,MAAMO,MAAM,CAACM,mBAAmB,CAAC,WAAW,EAAEb,eAAe,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCnB,OAAA;MAAIkB,SAAS,EAAC,SAAS;MAACE,GAAG,EAAEjB,UAAW;MAAAgB,QAAA,EACrC,CAAC,GAAGE,KAAK,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACvBxB,OAAA,WAASwB,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAnCID,kBAAkB;AAAA4B,EAAA,GAAlB5B,kBAAkB;AAqCxB,eAAeA,kBAAkB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}